-- MySQL Script generated by MySQL Workbench
-- Tue Jun 14 14:28:16 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema spotify
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema spotify
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `spotify` DEFAULT CHARACTER SET utf8 ;
USE `spotify` ;

-- -----------------------------------------------------
-- Table `spotify`.`usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`usuarios` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(255) NOT NULL,
  `nombre_usuario` VARCHAR(45) NOT NULL,
  `fecha_nacimiento` DATE NULL,
  `sexo` ENUM('M', 'F', 'O') NULL,
  `pais` VARCHAR(45) NULL,
  `codigo_postal` VARCHAR(5) NULL,
  `premium` TINYINT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`suscripciones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`suscripciones` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `fecha_inicio` DATE NOT NULL,
  `fecha_renovacion` DATE NOT NULL,
  `forma_pago` ENUM('TARJETA', 'PAYPAL') NOT NULL,
  `usuarios_premium_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_suscripciones_usuarios_premium_idx` (`usuarios_premium_id` ASC) VISIBLE,
  CONSTRAINT `fk_suscripciones_usuarios_premium`
    FOREIGN KEY (`usuarios_premium_id`)
    REFERENCES `spotify`.`usuarios` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`tarjetas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`tarjetas` (
  `numero_tarjeta` INT NOT NULL,
  `mes_caducidad` INT NOT NULL,
  `anyo_caducidad` INT NOT NULL,
  `codigo_seguridad` INT NOT NULL,
  `usuarios_id` INT NOT NULL,
  PRIMARY KEY (`numero_tarjeta`),
  INDEX `fk_tarjetas_usuarios1_idx` (`usuarios_id` ASC) VISIBLE,
  CONSTRAINT `fk_tarjetas_usuarios1`
    FOREIGN KEY (`usuarios_id`)
    REFERENCES `spotify`.`usuarios` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`cuentas_paypal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`cuentas_paypal` (
  `nombre_usuario_paypal` VARCHAR(255) NOT NULL,
  `usuarios_id` INT NOT NULL,
  PRIMARY KEY (`nombre_usuario_paypal`),
  INDEX `fk_cuentas_paypal_usuarios1_idx` (`usuarios_id` ASC) VISIBLE,
  CONSTRAINT `fk_cuentas_paypal_usuarios1`
    FOREIGN KEY (`usuarios_id`)
    REFERENCES `spotify`.`usuarios` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`pagos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`pagos` (
  `numero_orden` INT NOT NULL,
  `fecha` DATE NULL,
  `total` DECIMAL NULL,
  `usuarios_premium_id` INT NOT NULL,
  PRIMARY KEY (`numero_orden`),
  INDEX `fk_pagos_usuarios_premium1_idx` (`usuarios_premium_id` ASC) VISIBLE,
  CONSTRAINT `fk_pagos_usuarios_premium1`
    FOREIGN KEY (`usuarios_premium_id`)
    REFERENCES `spotify`.`usuarios` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`playlists`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`playlists` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `titulo` VARCHAR(45) NULL,
  `numero_canciones` INT NULL,
  `fecha_creacion` DATE NULL,
  `eliminada` TINYINT NULL DEFAULT 0,
  `fecha_eliminacion` DATE NULL,
  `usuarios_free_id` INT NOT NULL,
  `usuarios_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_playlists_usuarios_premium1_idx` (`usuarios_id` ASC) VISIBLE,
  CONSTRAINT `fk_playlists_usuarios_1`
    FOREIGN KEY (`usuarios_id`)
    REFERENCES `spotify`.`usuarios` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`artistas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`artistas` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  `imagen` BLOB NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`albums`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`albums` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `titulo` VARCHAR(45) NULL,
  `anyo_publicacion` INT NULL,
  `imagen` BLOB NULL,
  `artistas_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_albums_artistas1_idx` (`artistas_id` ASC) VISIBLE,
  CONSTRAINT `fk_albums_artistas1`
    FOREIGN KEY (`artistas_id`)
    REFERENCES `spotify`.`artistas` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`canciones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`canciones` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `titulo` VARCHAR(45) NULL,
  `duracion` INT NULL,
  `reproducciones` INT NULL,
  `albums_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_canciones_albums1_idx` (`albums_id` ASC) VISIBLE,
  CONSTRAINT `fk_canciones_albums1`
    FOREIGN KEY (`albums_id`)
    REFERENCES `spotify`.`albums` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`playlists_has_canciones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`playlists_has_canciones` (
  `playlists_id` INT NOT NULL,
  `canciones_id` INT NOT NULL,
  PRIMARY KEY (`playlists_id`, `canciones_id`),
  INDEX `fk_playlists_has_canciones_canciones1_idx` (`canciones_id` ASC) VISIBLE,
  INDEX `fk_playlists_has_canciones_playlists1_idx` (`playlists_id` ASC) VISIBLE,
  CONSTRAINT `fk_playlists_has_canciones_playlists1`
    FOREIGN KEY (`playlists_id`)
    REFERENCES `spotify`.`playlists` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_playlists_has_canciones_canciones1`
    FOREIGN KEY (`canciones_id`)
    REFERENCES `spotify`.`canciones` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`open_playlists_has_canciones_and_usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`open_playlists_has_canciones_and_usuarios` (
  `playlists_id` INT NOT NULL,
  `canciones_id` INT NOT NULL,
  `usuarios_id` INT NOT NULL,
  `fecha` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`playlists_id`, `canciones_id`, `usuarios_id`),
  INDEX `fk_playlists_has_canciones1_has_usuarios_usuarios1_idx` (`usuarios_id` ASC) VISIBLE,
  INDEX `fk_open_playlists_canciones_idx` (`canciones_id` ASC) VISIBLE,
  CONSTRAINT `fk_open_playlists_usuarios`
    FOREIGN KEY (`usuarios_id`)
    REFERENCES `spotify`.`usuarios` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_open_playlists_playlists`
    FOREIGN KEY (`playlists_id`)
    REFERENCES `spotify`.`playlists` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_open_playlists_canciones`
    FOREIGN KEY (`canciones_id`)
    REFERENCES `spotify`.`canciones` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`artistas_relacionados`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`artistas_relacionados` (
  `artista1_id` INT NOT NULL,
  `artista2_id` INT NOT NULL,
  PRIMARY KEY (`artista1_id`, `artista2_id`),
  INDEX `fk_artistas_relacionados_artistas_2_idx` (`artista2_id` ASC) VISIBLE,
  CONSTRAINT `fk_artistas_relacionados_artistas_1`
    FOREIGN KEY (`artista1_id`)
    REFERENCES `spotify`.`artistas` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_artistas_relacionados_artistas_2`
    FOREIGN KEY (`artista2_id`)
    REFERENCES `spotify`.`artistas` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`canciones_favoritas_usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`canciones_favoritas_usuarios` (
  `usuarios_id` INT NOT NULL,
  `canciones_id` INT NOT NULL,
  PRIMARY KEY (`usuarios_id`, `canciones_id`),
  INDEX `fk_usuarios_has_canciones_canciones1_idx` (`canciones_id` ASC) VISIBLE,
  INDEX `fk_usuarios_has_canciones_usuarios1_idx` (`usuarios_id` ASC) VISIBLE,
  CONSTRAINT `fk_canciones_favoritas_usuarios_usuarios1`
    FOREIGN KEY (`usuarios_id`)
    REFERENCES `spotify`.`usuarios` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_canciones_favoritas_usuarios_canciones1`
    FOREIGN KEY (`canciones_id`)
    REFERENCES `spotify`.`canciones` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`artistas_favoritos_usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`artistas_favoritos_usuarios` (
  `usuarios_id` INT NOT NULL,
  `artistas_id` INT NOT NULL,
  PRIMARY KEY (`usuarios_id`, `artistas_id`),
  INDEX `fk_usuarios_has_artistas_artistas1_idx` (`artistas_id` ASC) VISIBLE,
  INDEX `fk_usuarios_has_artistas_usuarios1_idx` (`usuarios_id` ASC) VISIBLE,
  CONSTRAINT `fk_artistas_favoritos_usuarios_usuarios1`
    FOREIGN KEY (`usuarios_id`)
    REFERENCES `spotify`.`usuarios` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_artistas_favoritos_usuarios_artistas1`
    FOREIGN KEY (`artistas_id`)
    REFERENCES `spotify`.`artistas` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
