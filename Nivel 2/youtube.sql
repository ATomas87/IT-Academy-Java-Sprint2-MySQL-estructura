-- MySQL Script generated by MySQL Workbench
-- Fri Jun  3 13:21:00 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema youtube
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema youtube
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `youtube` DEFAULT CHARACTER SET utf8 ;
USE `youtube` ;

-- -----------------------------------------------------
-- Table `youtube`.`usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`usuarios` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `nombre_usuario` VARCHAR(45) NOT NULL,
  `fecha_nacimiento` DATE NULL,
  `sexo` ENUM('M', 'F', 'O') NULL,
  `pais` VARCHAR(45) NULL,
  `codigo_postal` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`videos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`videos` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `titulo` VARCHAR(45) NOT NULL,
  `descripcion` VARCHAR(255) NULL,
  `tama√±o` INT NULL,
  `nombre_archivo` VARCHAR(255) NOT NULL,
  `duracion` INT NULL,
  `thumbnail` BLOB NULL,
  `reproducciones` INT NULL,
  `likes` INT NULL,
  `dislikes` INT NULL,
  `estado` ENUM('PUBLICO', 'OCULTO', 'PRIVADO') NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`etiquetas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`etiquetas` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  `videos_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_etiquetas_videos_idx` (`videos_id` ASC) VISIBLE,
  CONSTRAINT `fk_etiquetas_videos`
    FOREIGN KEY (`videos_id`)
    REFERENCES `youtube`.`videos` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`publicaciones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`publicaciones` (
  `usuarios_id` INT NOT NULL,
  `videos_id` INT NOT NULL,
  `fecha` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`usuarios_id`, `videos_id`),
  INDEX `fk_publicaciones_videos1_idx` (`videos_id` ASC) VISIBLE,
  CONSTRAINT `fk_publicaciones_usuarios1`
    FOREIGN KEY (`usuarios_id`)
    REFERENCES `youtube`.`usuarios` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_publicaciones_videos1`
    FOREIGN KEY (`videos_id`)
    REFERENCES `youtube`.`videos` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`canales`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`canales` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `descripcion` VARCHAR(255) NULL,
  `fecha_creacion` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `usuarios_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_canales_usuarios1_idx` (`usuarios_id` ASC) VISIBLE,
  CONSTRAINT `fk_canales_usuarios1`
    FOREIGN KEY (`usuarios_id`)
    REFERENCES `youtube`.`usuarios` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`suscripciones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`suscripciones` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `propietario_canal` INT NOT NULL,
  `suscriptor_canal` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_propietario_usuario_idx` (`propietario_canal` ASC) VISIBLE,
  INDEX `fk_suscriptor_usuario_idx` (`suscriptor_canal` ASC) VISIBLE,
  CONSTRAINT `fk_propietario_usuario`
    FOREIGN KEY (`propietario_canal`)
    REFERENCES `youtube`.`usuarios` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_suscriptor_usuario`
    FOREIGN KEY (`suscriptor_canal`)
    REFERENCES `youtube`.`usuarios` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`likes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`likes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `usuario_id` INT NOT NULL,
  `video_id` INT NOT NULL,
  `like` ENUM('LIKE', 'DISLIKE') NOT NULL,
  `fecha` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `fk_likes_video_idx` (`video_id` ASC) VISIBLE,
  INDEX `fk_likes_usuario_idx` (`usuario_id` ASC) VISIBLE,
  CONSTRAINT `fk_likes_video`
    FOREIGN KEY (`video_id`)
    REFERENCES `youtube`.`videos` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_likes_usuario`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `youtube`.`usuarios` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`playlists`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`playlists` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `fecha_creacion` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `estado` ENUM('PUBLICA', 'PRIVADA') NULL,
  `usuarios_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_playlists_usuarios1_idx` (`usuarios_id` ASC) VISIBLE,
  CONSTRAINT `fk_playlists_usuarios1`
    FOREIGN KEY (`usuarios_id`)
    REFERENCES `youtube`.`usuarios` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`playlists_has_videos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`playlists_has_videos` (
  `playlists_id` INT NOT NULL,
  `videos_id` INT NOT NULL,
  PRIMARY KEY (`playlists_id`, `videos_id`),
  INDEX `fk_playlists_has_videos_videos1_idx` (`videos_id` ASC) VISIBLE,
  INDEX `fk_playlists_has_videos_playlists1_idx` (`playlists_id` ASC) VISIBLE,
  CONSTRAINT `fk_playlists_has_videos_playlists1`
    FOREIGN KEY (`playlists_id`)
    REFERENCES `youtube`.`playlists` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_playlists_has_videos_videos1`
    FOREIGN KEY (`videos_id`)
    REFERENCES `youtube`.`videos` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`comentarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`comentarios` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `texto` TEXT NOT NULL,
  `fecha_creacion` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `usuarios_id` INT NOT NULL,
  `videos_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_comentarios_usuarios1_idx` (`usuarios_id` ASC) VISIBLE,
  INDEX `fk_comentarios_videos1_idx` (`videos_id` ASC) VISIBLE,
  CONSTRAINT `fk_comentarios_usuarios1`
    FOREIGN KEY (`usuarios_id`)
    REFERENCES `youtube`.`usuarios` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_comentarios_videos1`
    FOREIGN KEY (`videos_id`)
    REFERENCES `youtube`.`videos` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`likes_comentarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`likes_comentarios` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `usuarios_id` INT NOT NULL,
  `comentarios_id` INT NOT NULL,
  `like` ENUM('LIKE', 'DISLIKE') NULL,
  `fecha` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `fk_likescomentarios_comentarios_idx` (`comentarios_id` ASC) VISIBLE,
  INDEX `fk_likescomentarios_usuarios_idx` (`usuarios_id` ASC) VISIBLE,
  CONSTRAINT `fk_likescomentarios_usuarios`
    FOREIGN KEY (`usuarios_id`)
    REFERENCES `youtube`.`usuarios` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_likescomentarios_comentarios`
    FOREIGN KEY (`comentarios_id`)
    REFERENCES `youtube`.`comentarios` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
